*****************************************************************
*                                                               *
* Procedure :  Interp.c2m                                       *
* Purpose   :  interpolation des sections efficaces des isotopes*
*              particularises et de l'isotope residuel selon    *
*              les proprietes du coeur.                         *
* Author    :  M. Cordiez, V. Salino                            *
*                                                               *
* CALL      :                                                   *
*   MicroFuel  MacroTot Matex Fmap := Steady                    *
*  [MicroFuel] MacroTot Matex Fmap ::                           *
*        <<CB>> ;                                               *
*                                                               *
* Parameters: input                                             *
*  Fmap      carte de combustible (fuel map)                    *
*  MicroFuel objet contenant les sections efficaces interpolees *
*                                                               *
* Parameters: output                                            *
*  XeMicroF  objet contenant les sections efficaces interpolees *
*  LibType   type de bibliotheque combustible (SAPHYB ou        *
*            MULTICOMPO)                                        *
*                                                               *
*****************************************************************
PARAMETER MicroFuel MacroTot Matex Fmap
      REFL UOX195 UOX310 UOX255_Py8 UOX255_Py12 UOX310_Py12 ::
  ::: LINKED_LIST Matex Fmap ;
  ::: XSM_FILE REFL UOX195 UOX310 UOX255_Py8 UOX255_Py12 UOX310_Py12 ; ;
MODULE SCR: NCR: MACINI: MAC: GREP: UTL: DELETE: ABORT: END: ;

*----
*  Definition STRUCTURES, MODULES et PROCEDURES
*----
LINKED_LIST MacroFuel MacroRefl ;

REAL CB C D ;
STRING TypeRefl Palier MethodRefl ;
:: >>CB<< >>C<< >>D<< >>TypeRefl<< >>Palier<< >>MethodRefl<< ;

*----
* Variables for Marguet reflector
*----
REAL b10 b11 MBNat B10f B11f BTot ;
REAL avogadro := 6.022094E+23 ;
REAL avo_conc := avogadro 1.E-24 * ;
REAL D1h D1b D2h D2b D1r D2r SigmaRalenth SigmaRalentb SigmaRalentr ;
REAL densh densb densr Voliqh Voliqb Voliqr ;
REAL SigmaBoAbs1h SigmaBoAbs1b SigmaBoAbs1r ;
REAL SigmaBoAbs2h SigmaBoAbs2b SigmaBoAbs2r ;
REAL SigmaAbs1h SigmaAbs1b SigmaAbs1r ;
REAL SigmaAbs2h SigmaAbs2b SigmaAbs2r ;
REAL Total1h Total2h Total1b Total2b Total1r Total2r ;

*----
*  Fuel cross sections
*----
MicroFuel := SCR:
  UOX195 UOX255_Py8 UOX255_Py12 UOX310 UOX310_Py12 Fmap ::
     EDIT 2
     MICRO LINEAR EQUI EQVS
     TABLE UOX195 'BURN'
     MIX 4
        INST-BURN
        SET 'DMOD' MAP
        SET 'TFUE' MAP
        SET 'BARR' 1.
        MICRO ALL
            'B10'      *
            'B11'      *
            'Xe135'    0.
            'I135'     0.
            'Nd147'    0.
            'Pm147'    0.
            'Pm148'    0.
            'Pm148m'   0.
            'Pm149'    0.
            'Sm149'    0.
            '*MAC*RES' 1.
     ENDMIX

     TABLE UOX255_Py8 'BURN'
     MIX 5
        INST-BURN
        SET 'DMOD' MAP
        SET 'TFUE' MAP
        SET 'BARR' 4.
        MICRO ALL
            'B10'      *
            'B11'      *
            'Xe135'    0.
            'I135'     0.
            'Nd147'    0.
            'Pm147'    0.
            'Pm148'    0.
            'Pm148m'   0.
            'Pm149'    0.
            'Sm149'    0.
            '*MAC*RES' 1.
     ENDMIX

     TABLE UOX255_Py12 'BURN'
     MIX 6
        INST-BURN
        SET 'DMOD' MAP
        SET 'TFUE' MAP
        SET 'BARR' 4.
        MICRO ALL
            'B10'      *
            'B11'      *
            'Xe135'    0.
            'I135'     0.
            'Nd147'    0.
            'Pm147'    0.
            'Pm148'    0.
            'Pm148m'   0.
            'Pm149'    0.
            'Sm149'    0.
            '*MAC*RES' 1.
     ENDMIX

     TABLE UOX310 'BURN'
     MIX 7
        INST-BURN
        SET 'DMOD' MAP
        SET 'TFUE' MAP
        SET 'BARR' 1.
        MICRO ALL
            'B10'      *
            'B11'      *
            'Xe135'    0.
            'I135'     0.
            'Nd147'    0.
            'Pm147'    0.
            'Pm148'    0.
            'Pm148m'   0.
            'Pm149'    0.
            'Sm149'    0.
            '*MAC*RES' 1.
     ENDMIX

     TABLE UOX310_Py12 'BURN'
     MIX 8
        INST-BURN
        SET 'DMOD' MAP
        SET 'TFUE' MAP
        SET 'BARR' 4.
        MICRO ALL
            'B10'      *
            'B11'      *
            'Xe135'    0.
            'I135'     0.
            'Nd147'    0.
            'Pm147'    0.
            'Pm148'    0.
            'Pm148m'   0.
            'Pm149'    0.
            'Sm149'    0.
            '*MAC*RES' 1.
     ENDMIX

     TABLE UOX195 'BURN'
     MIX 9
        INST-BURN
        SET 'DMOD' MAP
        SET 'TFUE' MAP
        SET 'BARR' <<C>>
        MICRO ALL
            'B10'      *
            'B11'      *
            'Xe135'    0.
            'I135'     0.
            'Nd147'    0.
            'Pm147'    0.
            'Pm148'    0.
            'Pm148m'   0.
            'Pm149'    0.
            'Sm149'    0.
            '*MAC*RES' 1.
     ENDMIX

     TABLE UOX195 'BURN'
     MIX 10
        INST-BURN
        SET 'DMOD' MAP
        SET 'TFUE' MAP
        SET 'BARR' <<D>>
        MICRO ALL
            'B10'      *
            'B11'      *
            'Xe135'    0.
            'I135'     0.
            'Nd147'    0.
            'Pm147'    0.
            'Pm148'    0.
            'Pm148m'   0.
            'Pm149'    0.
            'Sm149'    0.
            '*MAC*RES' 1.
     ENDMIX
     ;

MacroFuel := MicroFuel :: STEP UP MACROLIB ;

*----
*  Reflector
*----

IF TypeRefl "TousPaliers" = THEN
  MacroRefl := NCR: REFL ::
    EDIT 1
    MACRO LINEAR
    NMIX 3
    COMPO REFL 'Radial'
    MIX 1 FROM 1
        SET 'C-BORE' <<CB>>
        SET 'Method' <<MethodRefl>>
        SET 'Palier' <<Palier>>
        SET 'dBaffleBarrl' 14.4
    ENDMIX
    COMPO REFL 'Bottom'
    MIX 2 FROM 1
        SET 'C-BORE' <<CB>>
        SET 'Method' <<MethodRefl>>
    ENDMIX
    COMPO REFL 'Top'
    MIX 3 FROM 1
        SET 'C-BORE' <<CB>>
        SET 'Method' <<MethodRefl>>
    ENDMIX
    ;

ELSEIF TypeRefl "MargCpy" = TypeRefl "MargCpyAdjus" = + THEN
* Source : "La physique des réacteurs nucléaires",
*          S. Marguet, 2nd édition, p.864.
  EVALUATE D1h D1b D2h D2b := 1.30 1.30 0.40 0.40 ;
  IF TypeRefl "MargCpyAdjus" = THEN
    EVALUATE D1r := 1.78 ;
  ELSE
    EVALUATE D1r := 1.30 ;
  ENDIF ;
  EVALUATE D2r := 0.40 ;
  EVALUATE SigmaRalenth SigmaRalentb SigmaRalentr :=
           0.0218       0.0210       0.00474 ;

  * Boron dependency
  EVALUATE densh densb densr := 0.667 0.754 0.714 ;
  EVALUATE Voliqh Voliqb Voliqr := 0.61796 0.66922 0.74273 ;

  EVALUATE SigmaBoAbs1h := 38.82 ;
  EVALUATE SigmaBoAbs1b :=  2.28 ;
  EVALUATE SigmaBoAbs1r := 15.11 ;

  EVALUATE SigmaBoAbs2h := 412.23 ;
  EVALUATE SigmaBoAbs2b := 344.97 ;
  EVALUATE SigmaBoAbs2r :=  63.30 ;

  EVALUATE b10 := 10.01294 ;
  EVALUATE b11 := 11.00928 ;
  EVALUATE B10f := .2 ;
  EVALUATE B11f := .8 ;
  EVALUATE MBNat := b10 B10f * b11 B11f * + ;

  EVALUATE BTot  := CB 1.0E-6 * avo_conc * MBNat / ;

  EVALUATE SigmaAbs1h := 0.0119 SigmaBoAbs1h BTot * densh * Voliqh * + ;
  EVALUATE SigmaAbs1b := 0.0157 SigmaBoAbs1b BTot * densb * Voliqb * + ;
  EVALUATE SigmaAbs1r := 0.0097 SigmaBoAbs1r BTot * densr * Voliqr * + ;

  EVALUATE SigmaAbs2h := 0.0176 SigmaBoAbs2h BTot * densh * Voliqh * + ;
  EVALUATE SigmaAbs2b := 0.0105 SigmaBoAbs2b BTot * densb * Voliqb * + ;
  EVALUATE SigmaAbs2r := 0.0831 SigmaBoAbs2r BTot * densr * Voliqr * + ;

* p.863
  EVALUATE SigmaRalenth := SigmaRalenth SigmaAbs1h 0.0119 - - ;
  EVALUATE SigmaRalentb := SigmaRalentb SigmaAbs1b 0.0157 - - ;
  EVALUATE SigmaRalentr := SigmaRalentr SigmaAbs1r 0.0097 - - ;

  EVALUATE Total1h := SigmaAbs1h SigmaRalenth + ;
  EVALUATE Total2h := SigmaAbs2h ;
  EVALUATE Total1b := SigmaAbs1b SigmaRalentb + ;
  EVALUATE Total2b := SigmaAbs2b ;
  EVALUATE Total1r := SigmaAbs1r SigmaRalentr + ;
  EVALUATE Total2r := SigmaAbs2r ;

  MacroRefl := MAC: ::
    EDIT 3 NGRO 2 NMIX 3 NIFI 0 ANIS 1 CTRA NONE NADF 1
    ENER 2.0E7 0.625 1.0E-3 VOLUME 1.0 1.0 1.0 READ INPUT
    MIX 1 ! Radial
      FLUX-INTG 1.0 1.0
      TOTAL <<Total1r>> <<Total2r>>
      DIFF  <<D1r>> <<D2r>>
      SCAT 2 2 (*2->1*) 0.0 (*1->1*) 0.0
           2 2 (*2->2*) 0.0 (*1->2*) <<SigmaRalentr>>
    MIX 2 ! Bottom
      FLUX-INTG 1.0 1.0
      TOTAL <<Total1b>> <<Total2b>>
      DIFF  <<D1b>> <<D2b>>
      SCAT 2 2 (*2->1*) 0.0 (*1->1*) 0.0
           2 2 (*2->2*) 0.0 (*1->2*) <<SigmaRalentb>>
    MIX 3 ! Top
      FLUX-INTG 1.0 1.0
      TOTAL <<Total1h>> <<Total2h>>
      DIFF  <<D1h>> <<D2h>>
      SCAT 2 2 (*2->1*) 0.0 (*1->1*) 0.0
           2 2 (*2->2*) 0.0 (*1->2*) <<SigmaRalenth>>
            ;
ELSE
  ECHO "Unknown reflector modelling" ;
  ABORT: ;
ENDIF ;
MacroTot Matex := MACINI: Matex MacroRefl MacroFuel ;

END: ;
QUIT "LIST" .
