*DECK GetTechData.c2m
*======================================================
* Name:   GridDil.c2m
* Type:   DRAGON procedure
* Author: G. Drouard 04/2018
*         [CS-SI | IRSN/PSN-EXP/SNC/LNR]
*------------------------------------------------------
* Use:
*   -Dilution of Grid in moderator
*   -Radial And Axial or only Radial Dilution
*
*------------------------------------------------------
* Structure of Procedure Appeal :
* GridDilData := GridDil :: <<Gestion>> <<TypeDil>> <<Model>>
*  <<tcom>> <<tmod>> ;
*
* INPUT Required:
*  > <<Gestion>> [STR] :
*       -BEAVRS        called as   "BEAV"
*       -TIHANGE       called as   "TIH"
*  > <<TypeDil>> [STR] :
*       -TOT
*       -PREC
*       -SEMI
*       -SEMB
*       -MANU
*  > <<ThermExp>> [INTEGER] :
*       ThermExp=0 => Thermal Expansion Desactiviated
*       ThermExp=1 => Thermal Expansion Activiated
*  > <<tcom>> [REAL] :
*       Fuel Temperature in C
*  > <<tmod>> [REAL] :
*       Moderator Temperature in C
* Structure of output data :
*  > LINKED_LIST :
*   BLOCK Mat_y : Mat_y_Cntr Mat_y_Side Mat_y_Corn Mat_y_Tube
*   BLOCK Mat_x : Mat_x_Cntr Mat_x_Side Mat_x_Corn Mat_x_Tube
*======================================================
PARAMETER GridDilData :: ::: LINKED_LIST GridDilData ; ;
MODULE UTL: ABORT: END: ADD: GREP: BACKUP: ;
PROCEDURE GetTechData ThermaExpans ;

STRING Gestion ;
STRING TypeDil ;
STRING Model ;
REAL tcom ;
REAL tmod ;
INTEGER ThermExp ;

:: >>Gestion<< >>TypeDil<< >>ThermExp<< >>tcom<< >>tmod<< ;

! NOTE : SUFFIXES MEANING :
! _x_y -> _x : grid type (bound our inter), _y : grid part (sleeve or crate)
! _In : Inter
! _Ex : Bound, Exterior  <<<< SEMI a changer en SEMB
! _Cr : Crate
! _Sl : Sleeve

! \\\\\\\\\\\\\\\\\\ LOCAL VAR \\\\\\\\\\\\\\\\\\\\\\\\\\\
! @@@@@@@@@@@@@@ Options Var @@@@@@@@@@@@@@`
INTEGER DUMMY_I := 0 ;
REAL DUMMY_R0 := 0.0 ;
! @@@@@@@@@@@@@@ Grid Data @@@@@@@@@@@@@@`

! =========Number of grids on active height===========
!--------Intermediate Grid----------
REAL NbGridInt ;
!--------Exterior Grid----------
REAL NbGridExt ;

! =========height of grids===========
!--------Intermediate Grid----------
REAL hGridInt ;
!--------Exterior Grid----------
REAL hGridExt ;
!-------Selection---------------
REAL hGrid ;
REAL hGridExpTemp ;
STRING hGridExpMat ;

!====weight per grid of materials=====
!--------Intermediate Grid----------
REAL w_Inc_Int_Sl ;
REAL w_Inc_Int_Cr ;
REAL w_Zr_Int_Sl ;
REAL w_Zr_Int_Cr ;
REAL w_SS_Int_Sl ;
REAL w_SS_Int_Cr ;
!--------Exterior Grid----------
REAL w_Inc_Ext_Sl ;
REAL w_Inc_Ext_Cr ;
REAL w_Zr_Ext_Sl ;
REAL w_Zr_Ext_Cr ;
REAL w_SS_Ext_Sl ;
REAL w_SS_Ext_Cr ;
!-------Selection---------------
REAL w_Inc_Sl ;
REAL w_Inc_Cr ;
REAL w_Zr_Sl ;
REAL w_Zr_Cr ;
REAL w_SS_Sl ;
REAL w_SS_Cr ;

! @@@@@@@@@@@@@@` Calculation vars  @@@@@@@@@@@@@@`
!====volume per grid of materials=====
!--------Intermediate Grid----------
REAL v_Inc_Int_Sl ;
REAL v_Inc_Int_Cr ;
REAL v_Zr_Int_Sl ;
REAL v_Zr_Int_Cr ;
REAL v_SS_Int_Sl ;
REAL v_SS_Int_Cr ;
!--------Exterior Grid----------
REAL v_Inc_Ext_Sl ;
REAL v_Inc_Ext_Cr ;
REAL v_Zr_Ext_Sl ;
REAL v_Zr_Ext_Cr ;
REAL v_SS_Ext_Sl ;
REAL v_SS_Ext_Cr ;
!-------Selection---------------
REAL v_Inc_Sl ;
REAL v_Inc_Cr ;
REAL v_Zr_Sl ;
REAL v_Zr_Cr ;
REAL v_SS_Sl ;
REAL v_SS_Cr ;

!====Radial Surface per grid of materials=====
!--------Intermediate Grid----------
REAL S_Inc_Int_Sl ;
REAL S_Inc_Int_Cr ;
REAL S_Zr_Int_Sl ;
REAL S_Zr_Int_Cr ;
REAL S_SS_Int_Sl ;
REAL S_SS_Int_Cr ;
!--------Exterior Grid----------
REAL S_Inc_Ext_Sl ;
REAL S_Inc_Ext_Cr ;
REAL S_Zr_Ext_Sl ;
REAL S_Zr_Ext_Cr ;
REAL S_SS_Ext_Sl ;
REAL S_SS_Ext_Cr ;
!-------Selection---------------
REAL S_Inc_Sl ;
REAL S_Inc_Cr ;
REAL S_Zr_Sl ;
REAL S_Zr_Cr ;
REAL S_SS_Sl ;
REAL S_SS_Cr ;
!====Radial Unit Surface per pin concerned of materials=====
!--------Intermediate Grid----------
REAL s_Inc_Int_Sl ;
REAL s_Inc_Int_Cr ;
REAL s_Zr_Int_Sl ;
REAL s_Zr_Int_Cr ;
REAL s_SS_Int_Sl ;
REAL s_SS_Int_Cr ;
!--------Exterior Grid----------
REAL s_Inc_Ext_Sl ;
REAL s_Inc_Ext_Cr ;
REAL s_Zr_Ext_Sl ;
REAL s_Zr_Ext_Cr ;
REAL s_SS_Ext_Sl ;
REAL s_SS_Ext_Cr ;
!-------Selection---------------
REAL s_Inc_Sl ;
REAL s_Inc_Cr ;
REAL s_Zr_Sl ;
REAL s_Zr_Cr ;
REAL s_SS_Sl ;
REAL s_SS_Cr ;
!====Radial Surface per type of cell===============
REAL sOutPinCntr ;
REAL sOutPinSide ;
REAL sOutPinCorn ;
REAL sOutPinTube ;

!==== surface ratio per cell and per type of cell===============
!----- SS304 --------
REAL ss304Cntr_S  ;
REAL ss304Side_S  ;
REAL ss304Corn_S  ;
REAL ss304Tube_S  ;
REAL ss304Cntr_C  ;
REAL ss304Side_C  ;
REAL ss304Corn_C  ;
REAL ss304Tube_C  ;
REAL ss304Cntr ;
REAL ss304Side ;
REAL ss304Corn ;
REAL ss304Tube ;
!----- Inc 718------
REAL IncCntr_S   ;
REAL IncSide_S   ;
REAL IncCorn_S   ;
REAL IncTube_S   ;
REAL IncCntr_C   ;
REAL IncSide_C   ;
REAL IncCorn_C   ;
REAL IncTube_C   ;
REAL IncCntr   ;
REAL IncSide   ;
REAL IncCorn   ;
REAL IncTube   ;
!----- Zr 4------
REAL Zr4Cntr_S  ;
REAL Zr4Side_S  ;
REAL Zr4Corn_S  ;
REAL Zr4Tube_S  ;
REAL Zr4Cntr_C  ;
REAL Zr4Side_C  ;
REAL Zr4Corn_C  ;
REAL Zr4Tube_C  ;
REAL Zr4Cntr ;
REAL Zr4Side ;
REAL Zr4Corn ;
REAL Zr4Tube ;
!----- H2O ------
REAL H2OCntr ;
REAL H2OSide ;
REAL H2OCorn ;
REAL H2OTube ;

!==== PREC DATA===============
REAL H2OCntrPre ;
REAL H2OSidePre ;
REAL H2OCornPre ;
REAL H2OTubePre ;
REAL GrPreTube ;
REAL GrPreCntr ;
REAL GrPreSide ;
REAL GrPreCorn ;

! @@@@@@@@@@@@@@ Other Data @@@@@@@@@@@@@@
REAL pPin ;
REAL pAss ;
REAL NbPinAssXY ;
REAL hWaterGap ;
REAL rCladFuel ;
REAL rTubeEx ;
REAL hActiv ;
REAL dInc ;
REAL dSS ;
REAL dZr4 ;
REAL tclad ;

! @@@@@@@@@@@@@@ Data Manu @@@@@@@@@@@@@@
REAL Vtot VtotZr4 VtotInc Zf Incf ;


! \\\\\\\\\\\\\\\\\\ IMPORT VALUES \\\\\\\\\\\\\\\\\\\\\\
LINKED_LIST Distances Densities GnrlData GridData DeplParam ;
GnrlData := GetTechData :: <<Gestion>> 'UOX' <<DUMMY_I>>
'None' 'GENERAL' ;
Distances := GetTechData :: <<Gestion>> 'UOX' <<DUMMY_I>>
'None' 'DISTANCES' ;
Densities := GetTechData :: <<Gestion>> 'UOX' <<DUMMY_I>>
'None' 'DENSITIES' ;
GridData := GetTechData :: <<Gestion>> 'UOX' <<DUMMY_I>>
'None' 'GRIDDATA' ; ! <<<< 'GRIDDILUTION' Ã  changer


! \\\\\\\\\\\\\\\\\\ GENERAL VALUES \\\\\\\\\\\\\\\\\\\\\\
GREP: GnrlData :: GETVAL 'NbPinAssXY' 1 >>NbPinAssXY<< ;

! \\\\\\\\\\\\\\\\\\ DISTANCE VALUES \\\\\\\\\\\\\\\\\\\\\\
GREP: Distances :: GETVAL 'hActiv' 1 >>hActiv<< ;
GREP: Distances :: GETVAL 'pAss' 1 >>pAss<< ;
GREP: Distances :: GETVAL 'pPin' 1 >>pPin<< ;
GREP: Distances :: GETVAL 'rCladFuel' 1 >>rCladFuel<< ;
GREP: Distances :: GETVAL 'rTubeEx' 1 >>rTubeEx<< ;

! \\\\\\\\\\\\\\\\\\ DENSITY VALUES \\\\\\\\\\\\\\\\\\\\\\
GREP: Densities :: GETVAL 'dInc' 1 >>dInc<< ;
GREP: Densities :: GETVAL 'dSS' 1 >>dSS<< ;
GREP: Densities :: GETVAL 'dZr4' 1 >>dZr4<< ;

! \\\\\\\\\\\\\\\\\\ GRID VALUES \\\\\\\\\\\\\\\\\\\\\\
GREP: GridData :: GETVAL 'NbGridInt' 1 >>NbGridInt<< ;
GREP: GridData :: GETVAL 'NbGridExt' 1 >>NbGridExt<< ;

GREP: GridData :: GETVAL 'hGridInt' 1 >>hGridInt<< ;
GREP: GridData :: GETVAL 'hGridExt' 1 >>hGridExt<< ;

IF TypeDil 'TOT' = THEN
GREP: GridData :: GETVAL 'wIncGr_In_Sl' 1 >>w_Inc_Int_Sl<< ;
GREP: GridData :: GETVAL 'wIncGr_In_Cr' 1 >>w_Inc_Int_Cr<< ;
GREP: GridData :: GETVAL 'wZrGr_In_Sl' 1 >>w_Zr_Int_Sl<< ;
GREP: GridData :: GETVAL 'wZrGr_In_Cr' 1 >>w_Zr_Int_Cr<< ;
GREP: GridData :: GETVAL 'wSSGr_In_Sl' 1 >>w_SS_Int_Sl<< ;
GREP: GridData :: GETVAL 'wSSGr_In_Cr' 1 >>w_SS_Int_Cr<< ;
GREP: GridData :: GETVAL 'wIncGr_Ex_Sl' 1 >>w_Inc_Ext_Sl<< ;
GREP: GridData :: GETVAL 'wIncGr_Ex_Cr' 1 >>w_Inc_Ext_Cr<< ;
GREP: GridData :: GETVAL 'wZrGr_Ex_Sl' 1 >>w_Zr_Ext_Sl<< ;
GREP: GridData :: GETVAL 'wZrGr_Ex_Cr' 1 >>w_Zr_Ext_Cr<< ;
GREP: GridData :: GETVAL 'wSSGr_Ex_Sl' 1 >>w_SS_Ext_Sl<< ;
GREP: GridData :: GETVAL 'wSSGr_Ex_Cr' 1 >>w_SS_Ext_Cr<< ;
EVALUATE w_Inc_Sl := w_Inc_Ext_Sl NbGridExt *
 w_Inc_Int_Sl NbGridInt *  + ;
EVALUATE w_Inc_Cr := w_Inc_Ext_Cr NbGridExt *
 w_Inc_Int_Cr NbGridInt *  + ;
EVALUATE w_Zr_Sl  := w_Zr_Ext_Sl  NbGridExt *
 w_Zr_Int_Sl  NbGridInt *  + ;
EVALUATE w_Zr_Cr  := w_Zr_Ext_Cr  NbGridExt *
 w_Zr_Int_Cr  NbGridInt *  + ;
EVALUATE w_SS_Sl  := w_SS_Ext_Sl  NbGridExt *
 w_SS_Int_Sl  NbGridInt *  + ;
EVALUATE w_SS_Cr  := w_SS_Ext_Cr  NbGridExt *
 w_SS_Int_Cr  NbGridInt *  + ;
EVALUATE hGrid := hActiv ;
EVALUATE hGridExpMat := 'UO2' ;
EVALUATE hGridExpTemp := tcom ;

ELSEIF TypeDil 'NULL' = THEN
EVALUATE w_Inc_Sl := 1.E-20 ;
EVALUATE w_Inc_Cr := 1.E-20 ;
EVALUATE w_Zr_Sl  := 1.E-20 ;
EVALUATE w_Zr_Cr  := 1.E-20 ;
EVALUATE w_SS_Sl  := 1.E-20 ;
EVALUATE w_SS_Cr  := 1.E-20 ;
EVALUATE hGrid := hActiv ;
EVALUATE hGridExpMat := 'UO2' ;
EVALUATE hGridExpTemp := tcom ;

ELSEIF TypeDil 'SEMI' = THEN
GREP: GridData :: GETVAL 'wIncGr_In_Sl' 1 >>w_Inc_Sl<< ;
GREP: GridData :: GETVAL 'wIncGr_In_Cr' 1 >>w_Inc_Cr<< ;
GREP: GridData :: GETVAL 'wZrGr_In_Sl' 1 >>w_Zr_Sl<< ;
GREP: GridData :: GETVAL 'wZrGr_In_Cr' 1 >>w_Zr_Cr<< ;
GREP: GridData :: GETVAL 'wSSGr_In_Sl' 1 >>w_SS_Sl<< ;
GREP: GridData :: GETVAL 'wSSGr_In_Cr' 1 >>w_SS_Cr<< ;
EVALUATE hGrid := hGridInt ;
EVALUATE hGridExpMat := 'Zr4' ;
EVALUATE hGridExpTemp := tmod ;

ELSEIF TypeDil 'SEMB' = THEN
GREP: GridData :: GETVAL 'wIncGr_Ex_Sl' 1 >>w_Inc_Sl<< ;
GREP: GridData :: GETVAL 'wIncGr_Ex_Cr' 1 >>w_Inc_Cr<< ;
GREP: GridData :: GETVAL 'wZrGr_Ex_Sl' 1 >>w_Zr_Sl<< ;
GREP: GridData :: GETVAL 'wZrGr_Ex_Cr' 1 >>w_Zr_Cr<< ;
GREP: GridData :: GETVAL 'wSSGr_Ex_Sl' 1 >>w_SS_Sl<< ;
GREP: GridData :: GETVAL 'wSSGr_Ex_Cr' 1 >>w_SS_Cr<< ;
EVALUATE hGrid := hGridExt ;
EVALUATE hGridExpMat := 'In718' ;
EVALUATE hGridExpTemp := tmod ;

ELSEIF TypeDil 'MANU' = THEN
  IF Gestion "TIH" = THEN
  ECHO "Pas de donnees a charger pour la gestion : " Gestion ;
  ELSE
  ECHO "Pas de dilution manuel disponible dans GridDil " ;
  ECHO "pour la gestion : " Gestion ;
  ENDIF ;

ELSEIF TypeDil 'PREC' = THEN
  GREP: GridData :: GETVAL 'H2OTubePre' 1 >>H2OTubePre<< ;
  GREP: GridData :: GETVAL 'H2OCntrPre' 1 >>H2OCntrPre<< ;
  GREP: GridData :: GETVAL 'H2OSidePre' 1 >>H2OSidePre<< ;
  GREP: GridData :: GETVAL 'H2OCornPre' 1 >>H2OCornPre<< ;

ELSE
ECHO "TypeDil Var is not recognized : " TypeDil ;
ECHO "TypeDil Possibilities are TOT, NULL, SEMI, SEMB, " ;
ECHO "PREC, MANU" ;
ABORT: ;


ENDIF ;


IF TypeDil "TOT" = TypeDil "SEMI" = TypeDil "SEMB" =
 + +  THEN
!\\\\\\\\\\\\ THERMAL EXPANSION \\\\\\\\\\\\\\\\\\\\\\\\
EVALUATE tclad := 0.12 tcom * 0.88 tmod * + ;
  IF ThermExp  0 <> THEN
  ! ----------- densities expansion ----------------------
   ThermaExpans ::  <<dZr4>> "Zr4" <<tmod>> "Density"
                    "TIH"  <<DUMMY_R0>> <<DUMMY_R0>>
                    >>dZr4<< ;

   ThermaExpans ::  <<dInc>> "In718" <<tmod>> "Density"
                    "TIH" <<DUMMY_R0>> <<DUMMY_R0>>
                    >>dInc<<  ;

   ThermaExpans ::  <<dSS>> "SS304" <<tmod>> "Density"
                    "TIH" <<DUMMY_R0>> <<DUMMY_R0>>
                    >>dSS<< ;
  ! ----------- distance expansion -----------------------
  !Pin Pitch
   ThermaExpans ::  <<pPin>> "Zr4" <<tmod>> "Distance"  !<<<< In 718 ou Zr4?
                    "TIH" <<DUMMY_R0>> <<DUMMY_R0>>
                    >>pPin<< ;
  !Ass Pitch
   ThermaExpans ::  <<pAss>> "SS304" <<tmod>> "Distance"
                    "TIH" <<DUMMY_R0>> <<DUMMY_R0>>
                    >>pAss<< ;
  !Pin (Fuel+Clad) Radius
   ThermaExpans ::  <<rCladFuel>> "Zr4" <<tclad>> "Distance"
                    "TIH" <<DUMMY_R0>> <<DUMMY_R0>>
                    >>rCladFuel<< ;
  !Tube Ext Radius
   ThermaExpans ::  <<rTubeEx>> "Zr4" <<tmod>> "Distance"
                    "TIH" <<DUMMY_R0>> <<DUMMY_R0>>
                    >>rTubeEx<< ;
  !Height Grid bound
   ThermaExpans ::  <<hGrid>> <<hGridExpMat>> <<hGridExpTemp>> "Distance"
                    "TIH" <<DUMMY_R0>> <<DUMMY_R0>>
                    >>hGrid<< ;
  ENDIF ;

!\\\\\\\\\\\\\\\ DIVERSE CALCULATIONS \\\\\\\\\\\\\\\\
EVALUATE hWaterGap    := pAss NbPinAssXY pPin * - 2. / ;

!\\\\\\\\\\\\\\\ BASIC GRID CALCULATIONS \\\\\\\\\\\\\\\\
EVALUATE v_Inc_Sl := w_Inc_Sl dInc / ;
EVALUATE v_Inc_Cr := w_Inc_Cr dInc / ;
EVALUATE v_Zr_Sl  := w_Zr_Sl dZr4 / ;
EVALUATE v_Zr_Cr  := w_Zr_Cr dZr4 / ;
EVALUATE v_SS_Sl  := w_SS_Sl dSS / ;
EVALUATE v_SS_Cr  := w_SS_Cr dSS / ;

EVALUATE S_Inc_Sl := v_Inc_Sl hGrid / ;
EVALUATE S_Inc_Cr := v_Inc_Cr hGrid / ;
EVALUATE S_Zr_Sl  := v_Zr_Sl  hGrid / ;
EVALUATE S_Zr_Cr  := v_Zr_Cr  hGrid / ;
EVALUATE S_SS_Sl  := v_SS_Sl  hGrid / ;
EVALUATE S_SS_Cr  := v_SS_Cr  hGrid / ;

EVALUATE sOutPinCntr  := pPin pPin * $Pi_R rCladFuel rCladFuel * * - ;
EVALUATE sOutPinSide  := sOutPinCntr hWaterGap pPin * + ;
EVALUATE sOutPinCorn  := sOutPinCntr hWaterGap pPin * 2.0 * +  ;
EVALUATE sOutPinTube  := pPin pPin * $Pi_R rTubeEx rTubeEx * * - ;
 !Integrer hWaterGap *hWaterGap pour sOutPinCorn?

EVALUATE s_Inc_Sl := S_Inc_Sl  NbPinAssXY 4. * / ;
EVALUATE s_Inc_Cr := S_Inc_Cr  NbPinAssXY NbPinAssXY * / ;
EVALUATE s_Zr_Sl  := S_Zr_Sl   NbPinAssXY 4. * / ;
EVALUATE s_Zr_Cr  := S_Zr_Cr   NbPinAssXY NbPinAssXY * / ;
EVALUATE s_SS_Sl  := S_SS_Sl   NbPinAssXY 4. * / ;
EVALUATE s_SS_Cr  := S_SS_Cr   NbPinAssXY NbPinAssXY * / ;

! valeur de surnface seulement pour les pin concernÃ© : si sleeve:
! par pin de cote et de coin

!\\\\\\\\\\\\\\\ FINAL CALCULATIONS \\\\\\\\\\\\\\\\
  EVALUATE ss304Cntr_S :=  1.E-20                     ;
  EVALUATE ss304Side_S :=  s_SS_Sl  sOutPinSide /     ;
  EVALUATE ss304Corn_S :=  s_SS_Sl 2. * sOutPinCorn / ;
  EVALUATE ss304Tube_S :=  1.E-20                     ;
  EVALUATE ss304Cntr_C :=  s_SS_Cr sOutPinCntr /      ;
  EVALUATE ss304Side_C :=  s_SS_Cr sOutPinSide /      ;
  EVALUATE ss304Corn_C :=  s_SS_Cr sOutPinCorn /      ;
  EVALUATE ss304Tube_C :=  s_SS_Cr sOutPinTube /      ;

  EVALUATE IncCntr_S :=  1.E-20                    ;
  EVALUATE IncSide_S :=  s_Inc_Sl  sOutPinSide /   ;
  EVALUATE IncCorn_S :=  s_Inc_Sl 2. * sOutPinCorn / ;
  EVALUATE IncTube_S :=  1.E-20                    ;
  EVALUATE IncCntr_C :=  s_Inc_Cr sOutPinCntr /    ;
  EVALUATE IncSide_C :=  s_Inc_Cr sOutPinSide /    ;
  EVALUATE IncCorn_C :=  s_Inc_Cr sOutPinCorn /    ;
  EVALUATE IncTube_C :=  s_Inc_Cr sOutPinTube /    ;

  EVALUATE Zr4Cntr_S  :=  1.E-20                     ;
  EVALUATE Zr4Side_S  :=  s_Zr_Sl  sOutPinSide /     ;
  EVALUATE Zr4Corn_S  :=  s_Zr_Sl 2. * sOutPinCorn / ;
  EVALUATE Zr4Tube_S  :=  1.E-20                     ;
  EVALUATE Zr4Cntr_C  :=  s_Zr_Cr sOutPinCntr /      ;
  EVALUATE Zr4Side_C  :=  s_Zr_Cr sOutPinSide /      ;
  EVALUATE Zr4Corn_C  :=  s_Zr_Cr sOutPinCorn /      ;
  EVALUATE Zr4Tube_C  :=  s_Zr_Cr sOutPinTube /      ;

  EVALUATE ss304Cntr := ss304Cntr_S ss304Cntr_C + ;
  EVALUATE ss304Side := ss304Side_S ss304Side_C + ;
  EVALUATE ss304Corn := ss304Corn_S ss304Corn_C + ;
  EVALUATE ss304Tube := ss304Tube_S ss304Tube_C + ;

  EVALUATE IncCntr := IncCntr_S IncCntr_C + ;
  EVALUATE IncSide := IncSide_S IncSide_C + ;
  EVALUATE IncCorn := IncCorn_S IncCorn_C + ;
  EVALUATE IncTube := IncTube_S IncTube_C + ;

  EVALUATE Zr4Cntr := Zr4Cntr_S Zr4Cntr_C + ;
  EVALUATE Zr4Side := Zr4Side_S Zr4Side_C + ;
  EVALUATE Zr4Corn := Zr4Corn_S Zr4Corn_C + ;
  EVALUATE Zr4Tube := Zr4Tube_S Zr4Tube_C + ;

  EVALUATE H2OCntr := 1. Zr4Cntr - IncCntr - ss304Cntr -  ;
  EVALUATE H2OSide := 1. Zr4Side - IncSide - ss304Side -  ;
  EVALUATE H2OCorn := 1. Zr4Corn - IncCorn - ss304Corn -  ;
  EVALUATE H2OTube := 1. Zr4Tube - IncTube - ss304Tube -  ;

  EVALUATE GrPreTube  := 1.0E-20 ;
  EVALUATE GrPreCntr  := 1.0E-20 ;
  EVALUATE GrPreSide  := 1.0E-20 ;
  EVALUATE GrPreCorn  := 1.0E-20 ;

ELSEIF TypeDil "NULL" =  THEN
  EVALUATE ss304Cntr := 1.E-20 ;
  EVALUATE ss304Side := 1.E-20 ;
  EVALUATE ss304Corn := 1.E-20 ;
  EVALUATE ss304Tube := 1.E-20 ;
  EVALUATE IncCntr   := 1.E-20 ;
  EVALUATE IncSide   := 1.E-20 ;
  EVALUATE IncCorn   := 1.E-20 ;
  EVALUATE IncTube   := 1.E-20 ;
  EVALUATE Zr4Cntr   := 1.E-20 ;
  EVALUATE Zr4Side   := 1.E-20 ;
  EVALUATE Zr4Corn   := 1.E-20 ;
  EVALUATE Zr4Tube   := 1.E-20 ;
  EVALUATE H2OCntr   := 1.0 ;
  EVALUATE H2OSide   := 1.0 ;
  EVALUATE H2OCorn   := 1.0 ;
  EVALUATE H2OTube   := 1.0 ;
  EVALUATE GrPreTube := 1.E-20 ;
  EVALUATE GrPreCntr := 1.E-20 ;
  EVALUATE GrPreSide := 1.E-20 ;
  EVALUATE GrPreCorn := 1.E-20 ;

ELSEIF TypeDil "PREC" = THEN
  EVALUATE ss304Cntr := 1.E-20 ;
  EVALUATE ss304Side := 1.E-20 ;
  EVALUATE ss304Corn := 1.E-20 ;
  EVALUATE ss304Tube := 1.E-20 ;
  EVALUATE IncCntr   := 1.E-20 ;
  EVALUATE IncSide   := 1.E-20 ;
  EVALUATE IncCorn   := 1.E-20 ;
  EVALUATE IncTube   := 1.E-20 ;
  EVALUATE Zr4Cntr   := 1.E-20 ;
  EVALUATE Zr4Side   := 1.E-20 ;
  EVALUATE Zr4Corn   := 1.E-20 ;
  EVALUATE Zr4Tube   := 1.E-20 ;
  EVALUATE H2OCntr   := H2OCntrPre ;
  EVALUATE H2OSide   := H2OSidePre ;
  EVALUATE H2OCorn   := H2OCornPre ;
  EVALUATE H2OTube   := H2OTubePre ;
  EVALUATE GrPreTube  := 1.0 H2OTubePre - ; ! Grid proportion in MODETE
  EVALUATE GrPreCntr  := 1.0 H2OCntrPre - ; ! Grid proportion in MODE
  EVALUATE GrPreSide  := 1.0 H2OSidePre - ; ! Grid proportion in MODEL
  EVALUATE GrPreCorn  := 1.0 H2OCornPre - ; ! Grid proportion in MODEC

ELSEIF TypeDil "MANU" = THEN
  IF Gestion "TIH" = THEN
  EVALUATE sOutPinCntr := 1.43538098 2.0 ** $Pi_R 0.53677 2.0 ** * - ;
  EVALUATE sOutPinSide := 1.43538098 0.07343 2.0 / * ;
  EVALUATE sOutPinCorn := sOutPinSide 2.0 * 0.07343 2.0 /
             0.07343 2.0 / * + ;

  EVALUATE ss304Cntr := 1.0E-20 ;
  EVALUATE ss304Side := 1.0E-20 ;
  EVALUATE ss304Corn := 1.0E-20 ;
  EVALUATE ss304Tube := 2.205 100.0 / ;

  EVALUATE IncTube := 1.162 100.0 / ;
  EVALUATE IncCntr := 0.5484 100.0 / ;
  EVALUATE IncSide := 0.5484 100.0 /
                      sOutPinCntr sOutPinCntr sOutPinSide + / *
                      3.041  100.0 /
                      sOutPinSide sOutPinCntr sOutPinSide + / * + ;
  EVALUATE IncCorn := 0.5484 100.0 /
                      sOutPinCntr sOutPinCntr sOutPinCorn + / *
                      3.041  100.0 /
                      sOutPinCorn sOutPinCntr sOutPinCorn + / * + ;

  EVALUATE Zr4Corn := 1.0E-20 ;
  EVALUATE Zr4Tube := 1.0E-20 ;
  EVALUATE Zr4Cntr := 1.0E-20 ;
  EVALUATE Zr4Side := 1.0E-20 ;

  EVALUATE GrPreTube  := 1.0E-20 ;
  EVALUATE GrPreCntr  := 1.0E-20 ;
  EVALUATE GrPreSide  := 1.0E-20 ;
  EVALUATE GrPreCorn  := 1.0E-20 ;

  EVALUATE H2OTube :=  1.0 ss304Tube - IncTube - Zr4Tube - ;
  EVALUATE H2OCntr :=  1.0 ss304Cntr - IncCntr - Zr4Cntr - ;
  EVALUATE H2OSide :=  1.0 ss304Side - IncSide - Zr4Side - ;
  EVALUATE H2OCorn :=  1.0 ss304Corn - IncCorn - Zr4Corn - ;
  ENDIF ;
ELSE
ECHO "TypeDil Var is not recognized : " TypeDil ;
ECHO "TypeDil Possibilities are TOT, NULL, SEMI, SEMB, " ;
ECHO "PREC, MANU" ;
ABORT: ;

ENDIF ;

!\\\\\\\\\\\\\\\ PRINT RESULTS \\\\\\\\\\\\\\\\
ECHO "++ Grid Dil (generalized version) RESULTS ++" ;

ECHO "sOutPinCntr := "  sOutPinCntr ;
ECHO "sOutPinSide := "  sOutPinSide ;
ECHO "sOutPinCorn := "  sOutPinCorn ;
ECHO "sOutPinTube := "  sOutPinTube ;

ECHO "Zr4Cntr := "  Zr4Cntr ;
ECHO "Zr4Side := "  Zr4Side ;
ECHO "Zr4Corn := "  Zr4Corn ;
ECHO "Zr4Tube := "  Zr4Tube ;

ECHO "IncCntr := "  IncCntr ;
ECHO "IncSide := "  IncSide ;
ECHO "IncCorn := "  IncCorn ;
ECHO "IncTube := "  IncTube ;

ECHO "ss304Cntr := "  ss304Cntr ;
ECHO "ss304Side := "  ss304Side ;
ECHO "ss304Corn := "  ss304Corn ;
ECHO "ss304Tube := "  ss304Tube ;

ECHO "H2OCntr := "  H2OCntr ;
ECHO "H2OSide := "  H2OSide ;
ECHO "H2OCorn := "  H2OCorn ;
ECHO "H2OTube := "  H2OTube ;

ECHO "GrPreTube := "  GrPreTube ;
ECHO "GrPreCntr := "  GrPreCntr ;
ECHO "GrPreSide := "  GrPreSide ;
ECHO "GrPreCorn := "  GrPreCorn ;

!ABORT: ;

!\\\\\\\\\\\\\\\ DATA LOAD \\\\\\\\\\\\\\\\
GridDilData := UTL: :: CREA 'Gestion' 1 = <<Gestion>> ;

GridDilData := UTL: GridDilData :: CREA 'Inc' 4 =
<<IncCntr>>
<<IncSide>>
<<IncCorn>>
<<IncTube>> ;
GridDilData := UTL: GridDilData :: CREA 'ss304' 4 =
<<ss304Cntr>>
<<ss304Side>>
<<ss304Corn>>
<<ss304Tube>> ;
GridDilData := UTL: GridDilData :: CREA 'Zr4' 4 =
<<Zr4Cntr>>
<<Zr4Side>>
<<Zr4Corn>>
<<Zr4Tube>> ;
GridDilData := UTL: GridDilData :: CREA 'H2O' 4 =
<<H2OCntr>>
<<H2OSide>>
<<H2OCorn>>
<<H2OTube>> ;
GridDilData := UTL: GridDilData :: CREA 'PREC' 4 =
<<GrPreCntr>>
<<GrPreSide>>
<<GrPreCorn>>
<<GrPreTube>> ;

ECHO "LECTURE GridDilData : " ;
GridDilData := UTL: GridDilData :: DUMP ;


END: ;
QUIT "LIST" .!
