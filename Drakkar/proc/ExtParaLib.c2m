*DECK ExtParaLib.c2m
*======================================================
* Name      :  ExtParaLib.c2m
* Type      :  DONJON procedure
* Use       :  Extract the value of gloabl parameters
*              in multi-parameter library that match
*              Input list
* Author(s) :  L. Liponi (start 07/2018)
*------------------------------------------------------
* Input Required:
*  > InpList      : [LINKED_LIST] List of Input aliases
*  > PkeyList     : [LINKED LIST] List of parkey to recover
* Output Provided:
*  < ParaList     : [LINKED LIST]
*------------------------------------------------------
* Procedure called as:
* ParaList := ExtParaLib InpList PkeyList ;
*------------------------------------------------------
* Notes
* 'InpList' should contain the following records (M=mandatory,R=required,O=optional)
*   + (M) NameMPLib    : [STR] Name Multi-parameter Library
*   + (M) BiblXS       : [STR] Type Multi-parameter Library
*   + (R) namdir       : [STR] Sub-directory in multicompo structure
*======================================================
PARAMETER   ParaList InpList PkeyList ::
            ::: LINKED_LIST
            ParaList InpList PkeyList ; ;
MODULE      SCR: NCR:
            GREP: UTL: DELETE: ABORT: END: ;

*=======================================================
* RETRIEVE INPUT
*-------------------------------------------------------
STRING NameMPLib    ;
GREP: InpList :: GETVAL 'NameMPLib' 1 * >>NameMPLib<< ;
STRING BiblXS       ;
GREP: InpList :: GETVAL 'BiblXS'    1 * >>BiblXS<<    ;

ECHO "Library   : " NameMPLib ;
ECHO "Type      : " BiblXS    ;

*=======================================================
* RECOVER MULTIPARAMETER LIBRARY
*-------------------------------------------------------
XSM_FILE  MPLibrary :: FILE <<NameMPLib>> ;

*=======================================================
* DEFINE VARIABLES
*-------------------------------------------------------
INTEGER iglob nglob ;                  ! Nb. of global parameters in the multi-parameter library
INTEGER ipkey npkey ;                  ! Nb. of global parameters from PkeyList to be recovered
STRING  NamePkey NameRec ;
STRING  Pval PvalRec sp  ;
INTEGER r dr ;
INTEGER p dp ;
INTEGER idx lenRec ;
STRING namdir ;

*=======================================================
* SEARCH XSLIB
*-------------------------------------------------------

! Copy the global parameters values from XSLIB
IF BiblXS "SAPH" = THEN
  EVALUATE Pval := "pval      "  ;
  EVALUATE sp   := " " ;
  EVALUATE lenRec  := 4 ;

  GREP: MPLibrary ::
    GETVAL "DIMSAP" 8 8 >>nglob<< ;

  ParaList := MPLibrary ::
    STEP UP "paramvaleurs" ;


ELSEIF BiblXS "MULT" = THEN
  GREP: InpList :: GETVAL 'namdir'    1 * >>namdir<<    ;
  EVALUATE Pval := "pval000000"  ;
  EVALUATE sp   := "0" ;
  EVALUATE lenRec  := 12 ;

  GREP: MPLibrary ::
    STEP UP <<namdir>>
    GETVAL "STATE-VECTOR" 5 5 >>nglob<< ;

  ParaList := MPLibrary ::
    STEP UP <<namdir>>
    STEP UP "GLOBAL" ;

ENDIF ;

! Retrieve max number of PARKEY from input list
GREP: PkeyList :: LENGTH 'PARKEY'   >>npkey<< ;


EVALUATE iglob  := 1 ;
! Loop on GLOB PARAM
WHILE iglob nglob <= DO

  EVALUATE r  := iglob 1 - lenRec * 1 + ;
  EVALUATE dr := iglob 1 - lenRec * lenRec + ;
  ECHO "r/dr=" r "/" dr ;

  IF BiblXS "SAPH" = THEN
    GREP: MPLibrary ::
      STEP UP "paramdescrip"
      GETVAL "PARKEY" <<r>> <<dr>>
        >>NameRec<< ;

  ELSEIF BiblXS "MULT" = THEN
    GREP: MPLibrary ::
      STEP UP <<namdir>>
      STEP UP "GLOBAL"
      GETVAL "PARKEY" <<r>> <<dr>>
        >>NameRec<< ;

  ENDIF ;
  ECHO "NameRec =" NameRec ;

  IF iglob 10 < THEN
    EVALUATE PvalRec := Pval sp + iglob I_TO_S + ;
  ELSE
    EVALUATE PvalRec := Pval iglob I_TO_S + ;
  ENDIF ;

  ECHO "Record global parameter : " PvalRec ;

  EVALUATE ipkey  := 1 ;
  ! Loop on PARKEYs
  WHILE ipkey npkey <= DO
    EVALUATE p  := ipkey 1 - 4 * 1 + ;
    EVALUATE dp := ipkey 1 - 4 * 4 + ;
    ECHO "p/dp=" p "/" dp ;

    GREP: PkeyList ::
      GETVAL 'PARKEY' <<p>> <<dp>>
       >>NamePkey<< ;
    ECHO "NamePkey =" NamePkey ;

    IF NamePkey NameRec = THEN
      ECHO "Found parameter " NamePkey "in library" ;

      ParaList := UTL: ParaList ::
        COPY <<PvalRec>> <<NamePkey>> ;
      ECHO "+++ COPIED RECORD +++" ;
      ParaList := UTL: ParaList ::
        IMPR <<NamePkey>> * ;

    ENDIF ;

    EVALUATE ipkey := ipkey 1 + ;

  ENDWHILE ;

  ECHO "Remove record " PvalRec "from ParaList" ;
  ParaList := UTL: ParaList ::
    DEL <<PvalRec>>
  ;

  EVALUATE iglob := iglob 1 + ;

ENDWHILE ;

*-------------------------------------------------------
END: ;
QUIT "LIST" .
