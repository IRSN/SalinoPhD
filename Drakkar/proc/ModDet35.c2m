*DECK ModDet35.c2m
*======================================================
* Name:   ModDet35.c2m
* Type:   DRAGON procedure
* Use:    Modify the record containing the MicroXS of U-235
*         employed for detector calculations. Compute new
*         MicroXS U-35 using different weighting integrated flux
* Author: L. Liponi 01.2018
*         [IRSN/PSN-EXP/SNC/LN]
*------------------------------------------------------
* Input Required:
*  > LibraryAu
*  > Calc
*  > Discr
*  > CP
*  > Out
*  > OptDet35 (STR) AssType (STR) SaveDir (STR)
* Output Provided:
*  < Out (modified U-35 MicroXS)
*------------------------------------------------------
* Procedure called as:
* Out := ModDet35 Out LibraryAu Calc Discr CP ::
*   <<AssType>> <<SaveDir>> <<OptDet35>> ;
*------------------------------------------------------
* The microscopic fission XS of U235 is normally flux-weighted according
* to the complete homogenization of the geometry (MERGE COMP in EDI:).
* In MakeBib1BU that implies a Full Assembly homogenization.
* This procedure allows to consider a different weighting integrated
* flux, particularly the flux recovered in the Inner Rod of the Instrumental
* Tube (other options can be added!).
* The procedure performs an additional homogenization to compute a new
* MicroXS for U-35, then it extracts and substitutes the newly computed value
* in the input EDI: object (Out).
*
* *** ATTENTION!!! ***
* Since the MERGE MIX option is employed to defined the homogenization domain,
* the procedure depends on the MIXs number and assembly geometry defined in
* CreaMix.c2m, Geo17x17.x2m. BE CAREFUL !
* At the moment, in Geo15x15.x2m the instrumental tube is not conceived.
*------------------------------------------------------
* The mixture generally assigned to the Inner Rod of the Instrumenal Tube is:
* # 15
*======================================================
PARAMETER Out LibraryAu Calc Discr CP ::
      ::: LINKED_LIST
          Out LibraryAu Calc Discr CP ; ;

MODULE    EDI: GREP: ABORT: UTL: END: ;
LINKED_LIST OutDetIT ;

*-----------------------------------------------------
* Parameters
*-----------------------------------------------------
STRING AssType SaveDir OptDet35 ;
:: >>AssType<< >>SaveDir<< >>OptDet35<< ;

*------------------------------------------------------
* Declaration Variables
*------------------------------------------------------
REAL nftotU5_ITg1 nftotU5_ITg2 ; ! [b] Micro FISSION cross sections Inner Rod of the Instrumental Tube
REAL nftotU5_FAg1 nftotU5_FAg2 ; ! [b] Micro FISSION cross sections Full Assembly
REAL diffU5_g1 diffU5_g2 ;

STRING  NameIso NameDetIso SaveDir35 ;
INTEGER idxIso idxDetIso MaxIdxIso NbPartIso ;

*------------------------------------------------------
* Define Additional Parameters
*------------------------------------------------------
EVALUATE NameDetIso   := "U5DET" ;
EVALUATE SaveDir35    := "DIR_" NameDetIso + ;

*------------------------------------------------------
* Compute Micro FISSION cross sections
*------------------------------------------------------

IF OptDet35 "IRIT" = THEN

  IF AssType "UOX" = THEN

    OutDetIT := EDI: LibraryAu Calc Discr CP ::
      EDIT 0
      MICR 1 <<NameDetIso>>
      MERG MIX
!     NMIX = 103
!     1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0
      COND 0.625
      SAVE ON <<SaveDir35>> ;

  ELSEIF AssType "MOX" = THEN

    OutDetIT := EDI: LibraryAu Calc Discr CP ::
      EDIT 0
      MICR 1 <<NameDetIso>>
      MERG MIX
!     NMIX = 133
!     1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0
      COND 0.625
      SAVE ON <<SaveDir35>> ;

  ELSEIF AssType "UGd" = AssType "UGd8" = + THEN

    OutDetIT := EDI: LibraryAu Calc Discr CP ::
      EDIT 0
      MICR 1 <<NameDetIso>>
      MERG MIX
!     NMIX = 145
!     1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
      0  0  0  0  0
      COND 0.625
      SAVE ON <<SaveDir35>> ;

  ELSE ! Input Error
    ECHO "Error --- AssType:" AssType "not recognized." ;
    ABORT: ;
  ENDIF ;

ELSE ! Input Error
  ECHO "Error --- OptDet35:" OptDet35 "not recognized." ;
  ABORT: ;
ENDIF ;

*------------------------------------------------------
* Manipulate EDITION objects
*------------------------------------------------------

*--- Recover No. of Particularized Isotopes
GREP: Out :: STEP UP  <<SaveDir>>
    GETVAL  'STATE-VECTOR' 2 NVAL 1
    >>NbPartIso<< ;
ECHO "+++ Number of Particularized Isotopes: " NbPartIso ;

EVALUATE MaxIdxIso    := 12 NbPartIso * ; ! 12CHAR * No. Particularized Isotopes

*--- Search Isotope Index in Out
EVALUATE idxIso := 1 ;

WHILE idxIso MaxIdxIso <= DO

  ! Only 5 of 12 CHARS are used to identify the isotope
  GREP: Out :: STEP UP  <<SaveDir>>
    GETVAL  'ISOTOPESUSED' <<idxIso>> NVAL 5
    >>NameIso<< ;

  EVALUATE idxIso := idxIso 12 + ;

  IF NameIso NameDetIso = THEN
    EVALUATE idxDetIso    := idxIso 1 - 12 / ;
    ECHO "+++ Isotope: " NameDetIso "has been found." ;
    ECHO "+++ Index  : " idxDetIso ;
    EVALUATE idxIso       := MaxIdxIso 1 + ;
  ENDIF ;

ENDWHILE ;

*--- Extract Microscopic fission cross sections (g=2)

* Inner Rod of the Instrumental Tube [from OutDetIT]
GREP: OutDetIT :: STEP UP <<SaveDir35>>
  STEP UP 'ISOTOPESLIST'
  STEP AT  1                            ! MICR 1 <<NameDetIso>>
  GETVAL  'NFTOT       ' 1 NVAL 2
  >>nftotU5_ITg1<< >>nftotU5_ITg2<< ;
ECHO "MICRO-XS FISSION (ITIR): " nftotU5_ITg1 nftotU5_ITg2 ;

* Full Assembly [from Out]
GREP: Out :: STEP UP <<SaveDir>>
  STEP UP 'ISOTOPESLIST'
  STEP AT  <<idxDetIso>>
  GETVAL  'NFTOT       ' 1 NVAL 2
  >>nftotU5_FAg1<< >>nftotU5_FAg2<< ;
ECHO "MICRO-XS FISSION (  FA): " nftotU5_FAg1 nftotU5_FAg2 ;

* Compare Extracted values (IRIT vs. FA)
EVALUATE diffU5_g1 := nftotU5_ITg1 nftotU5_FAg1 -
  nftotU5_FAg1 / 100. * ;
EVALUATE diffU5_g2 := nftotU5_ITg2 nftotU5_FAg2 -
  nftotU5_FAg2 / 100. * ;
ECHO "DIFF % MICRO-XS FISSION : " diffU5_g1 diffU5_g2 ;


*--- Delete record SaveDir->ISOTOPESLIST->NameDetIso->NFTOT in Out
Out := UTL: Out :: STEP UP <<SaveDir>>
  STEP UP 'ISOTOPESLIST'
  STEP AT  <<idxDetIso>>
  DEL 'NFTOT       ' ;

*--- Create new record NFTOT
Out := UTL: Out :: STEP UP <<SaveDir>>
  STEP UP 'ISOTOPESLIST'
  STEP AT  <<idxDetIso>>
  CREA 'NFTOT       ' 2 =
    <<nftotU5_ITg1>> <<nftotU5_ITg2>> ;

*------------------------------------------------------

END: ;
QUIT "LIST" .
