*======================================================================
* Name:   EvoNominale.x2m
* Type:   DRAGON File
* Use:    Jdd de creation des fichiers d'evolution nominale
* Author: A. Bruneau 2013, 2014, 04.2015, 07.2015, 08.2015, 01.2016
*         [CS-SI | IRSN/PSN-EXP/SNC/LNR]
* Mod.    G. Tixier 10.2016
*         [CS-SI | IRSN/PSN-EXP/SNC/LNR]
* Mod.    R. Nguyen Van Ho 11.2016
*         [URANUS | IRSN/PSN-EXP/SNC/LNR]
*         Ajout selecteur donnees nucleaires
*----------------------------------------------------------------------
*======================================================================
* Structures et Modules
*-------------------------------------------------------
PARAMETER   ExpLibrary Burnup ConcMode Info ;
PROCEDURE   CreaStepList GetMolarMass MetalMix CreaMix
            Geo15x15 Autop ;
MODULE      LIB: GEO: SYBILT: USS: ASM: FLU:
            EVO: UTL: GREP: ABORT: DELETE: END: ;
LINKED_LIST Library LibraryAu StepList CP Calc
            MolarMasses FeNat CrNat SnNat NiNat ZrNat TiNat SiNat
            BNat AgNat CdNat SNat HfNat GdNat Zirc4 Incon SS304 M5
            KNat InNat
            AIC HfR Gd2O3 BP
            Assmb AssmbAu Discr DiscrAu ;
LOGICAL True False   := $True_L $False_L ;
*---
*  Retrieve assembly specifications
*---
STRING Gestion AssType ConfigPyrex ;
INTEGER Teneur_I maxstep ;
:: >>Gestion<< >>AssType<< >>Teneur_I<< >>ConfigPyrex<< >>maxstep<< ;

*---
* Flag to activate thermal expansion
*   -  =1 : Activated
*   - <>1 : Deactivated
*---
INTEGER ThermaExpans := 1 ;

*---
* Traitement des assemblages Hafnium
* Par defaut, ce mot-cle est fixe a "NON"
*---
STRING HF := "Non" ;

*---
* Sélection du modèle de dilution des grilles parmi les choix suivants :
*   - "TOT"
*   - "SEMB" : "SEMI_B"
*   - "SEMI" : "SEMI_I"
*   - "NULL"
*   - "PREC"
*   - "MANU"
* Où I(=INTERMEDIATE) et B(=BOUND)
*---
STRING TypeDil := "TOT" ;

*---
* Calculation criteria for specific modules
*---
INTEGER ipass  := 2     ; ! USS: PASS criterion
INTEGER imax   := 200   ; ! USS: MAXST criterion
REAL    flups  := 1.E-5 ; ! FLU: EXTE THER UNKT criteria
REAL    eps1   := 1.E-5 ; ! EVO: EPS1 criterion
REAL    eps2   := 1.E-5 ; ! EVO: EPS2 criterion

*-------------------------------------------------------
!STRING  AssType  := "UOX"  ; ! 3 Char: UOX, MOX, ou UGd
!STRING  Gestion  := "TIH"  ; ! TIH ou BEAV
!INTEGER Teneur_I := 310    ;
STRING  InfoGado ;
IF AssType "UGd" = AssType "UGd8" = + THEN
  EVALUATE InfoGado := "" ;
ENDIF ;
!STRING  ConfigPyrex := "Py12" ;

*---
* File containing multigroup nuclear data
*---
STRING Evaluation := "JEFF311"  ;
STRING FileNuclData := "D172" Evaluation + ;

*=======================================================
* These parameters are parsed from the calculation options previously defined
*-------------------------------------------------------

*--- Info EvoNominale
STRING  Teneur   := Teneur_I I_TO_S ;

*--- Title
STRING  Title ;
IF ConfigPyrex "None" = THEN
  EVALUATE Title := Gestion "_" + AssType + "_" + Teneur +
                      "_" + FileNuclData +  ;
ELSE
  EVALUATE Title := Gestion "_" + AssType + "_" + Teneur +
                      "-" + ConfigPyrex + "_" + FileNuclData +  ;
ENDIF ;

*--- Modele de fuites
STRING LEAKTYPE LEAKEQUATION CTRA ;
EVALUATE LEAKTYPE LEAKEQUATION CTRA := "B" "B1"   "APOL" ;
!EVALUATE LEAKTYPE LEAKEQUATION CTRA := "K" "P0TR" "OLDW" ;
!EVALUATE LEAKTYPE LEAKEQUATION CTRA := "K" "B1" "APOL" ;
*=======================================================
* SUMMARY CALCULATION
*-------------------------------------------------------
ECHO "$$$ Case of Study $$$" ;
ECHO "  - Gestion      : " Gestion      ;
ECHO "  - AssType      : " AssType      ;
ECHO "  - Teneur       : " Teneur       ;
ECHO "  - InfoGado     : " InfoGado     ;
ECHO "  - ConfigPyrex  : " ConfigPyrex  ;
ECHO "  - FileNuclData : " FileNuclData ;
ECHO "$$$ Summary Calculation options $$$" ;
ECHO "  - ThermaExpans : " ThermaExpans ;
ECHO "  - HF           : " HF           ;
ECHO "  - TypeDil      : " TypeDil      ;
ECHO "$$$ " ;

*-------------------------------------------------------
* Variables
*-------------------------------------------------------
REAL    PowMWT ; ! Conversion burnup -> irra time [MWT]

*--- BURNUP: Depletion and Self-Shielding
INTEGER istep nstep ;                  ! [i/n] indices burnup STEP loop
INTEGER iauto nauto ;                  ! [i/n] indices AUTOprotection conditional statement
REAL    evobeg evoend ;
REAL    nextstep stepauto kinf ;
INTEGER valstep valauto ;

*--- Depletion Conditions
REAL    dmod tmod cbor tfuel barr ;
INTEGER BarType ;

*--- Depletion Loop Variables (Initialized)
EVALUATE istep iauto := 1 1 ;
EVALUATE evobeg evoend := 0. 0. ;

*-------------------------------------------------------
* Procedures: - Create every burnup & parameters lists (CreaStepList)
*             - Retrieve molar masses (GetMolarMasses)
*             - Create Metal Mixes (MetalMix)
*             - Using all of the above, create a Library with LIB: (CreaMix)
*             - Generate tracking objects (Geo15x15)
*---- 1) Burnup & parameter lists ----------------------
StepList := CreaStepList ::
  <<Gestion>> <<AssType>> <<ConfigPyrex>> 'DUMMY' ;
GREP: StepList :: GETVAL 'DeplParam' 1 5
  >>dmod<< >>cbor<< >>barr<< >>tfuel<< >>tmod<< ;
GREP: StepList :: LENGTH 'ListBU'     >>nstep<< ;
GREP: StepList :: LENGTH 'ListAutop'  >>nauto<< ;
*---- 2) Molar Masses ----------------------------------
MolarMasses := GetMolarMass :: <<FileNuclData>> <<Evaluation>> ;
*---- 3) Metal Mixes -----------------------------------
FeNat CrNat SnNat NiNat ZrNat TiNat SiNat KNat BNat AgNat
CdNat SNat HfNat InNat
Zirc4 Incon SS304 M5 AIC HfR GdNat Gd2O3 BP := MetalMix
MolarMasses ::
<<Evaluation>> <<Gestion>> ;
*---- 4) Library with all mixes ------------------------
Library ConcMode := CreaMix
FeNat CrNat SnNat NiNat ZrNat TiNat SiNat KNat BNat AgNat CdNat SNat
HfNat InNat Zirc4 Incon SS304 M5 AIC HfR GdNat Gd2O3 BP MolarMasses ::
<<FileNuclData>> <<Evaluation>> <<Gestion>> <<AssType>>
<<Teneur_I>> <<ThermaExpans>> <<CTRA>>
<<dmod>> <<cbor>> <<tfuel>> <<tmod>> <<TypeDil>>
>>PowMWT<< ;
ECHO "#PowMWT" PowMWT ;
*---- 5) Geometry & Tracking ---------------------------
EVALUATE BarType := barr R_TO_I ;
!IF Gestion "TIH" = THEN
  Assmb
  AssmbAu
  Discr
  DiscrAu
  := Geo15x15 ::
    <<Gestion>> <<AssType>> <<ConfigPyrex>> <<ThermaExpans>>
    <<BarType>> <<tfuel>> <<tmod>> ;
!ELSE
!  Assmb
!  AssmbAu
!  Discr
!  DiscrAu
!  := Geo17x17 ::
!    <<Gestion>> <<AssType>> <<ConfigPyrex>> <<ThermaExpans>>
!    <<BarType>> <<tfuel>> <<tmod>> ;
!ENDIF ;

*---- Summary ---------------------------
ECHO "#PARA DM=" dmod "CB=" cbor "BA=" BarType "TC=" tfuel ;

*-------------------------------------------------------
* Autoprotection + CP + calcul de flux a burnup 0
*-------------------------------------------------------
LibraryAu := Autop Library DiscrAu ::
  <<False>> <<FileNuclData>> <<Evaluation>> <<AssType>> <<BarType>> ;

CP := ASM: LibraryAu Discr :: EDIT 0 ARM ;

Calc := FLU: CP LibraryAu Discr ::
  EXTE 200 <<flups>> THER 200 <<flups>> UNKT <<flups>>
  TYPE <<LEAKTYPE>> <<LEAKEQUATION>> SIGS ;

GREP: Calc :: GETVAL 'K-INFINITY' 1 >>kinf<< ;

ECHO "#Sortie de FLU: au Burnup:  0.000000E+00" ;
ECHO "#KINF BURNUP= 0.000000E+00 K-INF=" kinf ;

WHILE istep nstep <= istep maxstep <= * DO

  GREP: StepList :: GETVAL 'ListBU' <<istep>> >>nextstep<< ;
  EVALUATE evobeg := evoend ;
  EVALUATE evoend := nextstep PowMWT / ;
  ECHO "#Burnup step" istep "between" evobeg "and" evoend "day:" ;

  IF istep 1 = THEN
    Burnup LibraryAu := EVO: LibraryAu Calc Discr :: EDIT 10
         DEPL <<evobeg>> <<evoend>> DAY POWR <<PowMWT>>
         EPS1 <<eps1>>  EPS2 <<eps2>>
         EXPM 1.E15 RUNG EXTR NSAT NODI GLOB
         ;
  ELSE
    Burnup LibraryAu := EVO: Burnup LibraryAu Calc Discr :: EDIT 10
         DEPL <<evobeg>> <<evoend>> DAY POWR <<PowMWT>>
         EPS1 <<eps1>>  EPS2 <<eps2>>
         EXPM 1.E15 RUNG EXTR NSAT NODI GLOB
         ;
  ENDIF ;
*-------------------------------------------------------
* Self Shielding
*-------------------------------------------------------
  GREP: StepList :: GETVAL 'ListAutop' <<iauto>> >>stepauto<< ;
  EVALUATE valstep := nextstep R_TO_I ;
  EVALUATE valauto := stepauto R_TO_I ;

  IF valstep valauto = THEN
    ECHO "StepAuto:" stepauto "MWj/t" ;
    ECHO "Self-shielding calculation" iauto "at" evoend "DAY:" ;

    LibraryAu := Autop LibraryAu Library DiscrAu ::
      <<True>> <<FileNuclData>> <<Evaluation>> <<AssType>> <<BarType>> ;

    IF iauto nauto < THEN
      EVALUATE iauto := iauto 1 + ;
    ENDIF ;
  ENDIF ;
*-------------------------------------------------------
  CP := DELETE: CP ;
  CP := ASM: LibraryAu Discr :: EDIT 0 ARM ;

  Calc := FLU: Calc Discr LibraryAu CP ::
    EXTE 200 <<flups>> THER 200 <<flups>> UNKT <<flups>>
    TYPE <<LEAKTYPE>> <<LEAKEQUATION>> SIGS ;

  GREP: Calc :: GETVAL 'K-INFINITY' 1 >>kinf<< ;

  ECHO "#Sortie de FLU: au Burnup:" nextstep ;
  ECHO "#KINF BURNUP=" nextstep " K-INF=" kinf ;

*-------------------------------------------------------
* Sauvegarde du pas d'evolution dans l'objet L_BURNUP
*-------------------------------------------------------
  Burnup LibraryAu := EVO: Burnup LibraryAu Calc Discr :: EDIT 10
                      SAVE <<evoend>> DAY POWR <<PowMWT>> ;
  EVALUATE istep := istep 1 + ;

ENDWHILE ;
*-------------------------------------------------------
* Table pour info sur l'assemblage qui contient:
*       - le facteur de conversion PowMWT
*       - le type d'assemblage AssType (UOX, MOX ou UGd)
*       - la gestion (TIH ou BEAV)
*       - Depletion conditions
*       - Modèle de fuites
*       - Expansion thermique
*       - Assemblages Hafnium
*       - Dilution des grilles
*-------------------------------------------------------
Info := UTL:      :: CREA 'NORM_MWT' 1 = <<PowMWT>>  ;
Info := UTL: Info :: CREA 'TYPE    ' 1 = <<AssType>> ;
IF ConfigPyrex "Py12a" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py12" "a" ;
ELSEIF ConfigPyrex "Py12b" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py12" "b" ;
ELSEIF ConfigPyrex "Py15a" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py15" "a" ;
ELSEIF ConfigPyrex "Py15b" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py15" "b" ;
ELSEIF ConfigPyrex "Py15c" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py15" "c" ;
ELSEIF ConfigPyrex "Py15d" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py15" "d" ;
ELSEIF ConfigPyrex "Py16a" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py16" "a" ;
ELSEIF ConfigPyrex "Py16b" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py16" "b" ;
ELSEIF ConfigPyrex "Py20a" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py20" "a" ;
ELSEIF ConfigPyrex "Py20b" = THEN
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = "Py20" "b" ;
ELSE
  Info := UTL: Info :: CREA 'CONFPYRX' 2 = <<ConfigPyrex>> " " ;
ENDIF ;
Info := UTL: Info :: CREA 'GESTION ' 1 = <<Gestion>> ;
Info := UTL: Info :: CREA 'TENEUR  ' 1 = <<Teneur>>  ;
IF AssType "UGd" = AssType "UGd8" = + THEN
  Info := UTL: Info :: CREA 'INFOGADO' 1 = <<InfoGado>> ;
ENDIF ;
Info := UTL: Info :: CREA 'DeplParam' 5 =
  <<dmod>> <<cbor>> <<barr>> <<tfuel>> <<tmod>> ;
Info := UTL: Info :: CREA 'ThermaExpans' 1 = <<ThermaExpans>> ;
Info := UTL: Info :: CREA 'HF'           1 = <<HF>> ;
Info := UTL: Info :: CREA 'TypeDil'      1 = <<TypeDil>> ;
*-------------------------------------------------------
ECHO "Evolution completed:" Title ;
ExpLibrary := Library ;
END: ;
QUIT "LIST" .
