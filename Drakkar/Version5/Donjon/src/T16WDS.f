*DECK T16WDS
      SUBROUTINE T16WDS(IPCPO ,NGCCPO,NVXSR ,NMXSR ,IBURN ,EFJ   ,
     >                  NAMDXS,ITYXS ,
     >                  FLXINT,FLXDIS,OVERV ,RECXSV,IDRXSM,RECXSM,
     >                  RECSCA)
*
*----
*  1- PROGRAMME STATISTICS:
*      NAME     : T16WDS
*
*Purpose:
*  WRITE PROPERTIES TO CPO DATA STRUCTURE
*
*Author(s): 
* G.MARLEAU
*
*      CREATED  : 1999/10/21
*      REF      : IGE-244 REV.1
*
*      MODIFICATION LOG
*      --------------------------------------------------------------
*      | DATE AND INITIALS  | MOTIVATIONS
*      --------------------------------------------------------------
*      | 1999/10/21 G.M.    | WRITE PROPERTIES TO CPO DATA STRUCTURE
*      --------------------------------------------------------------
*
*  2- ROUTINE PARAMETERS:
*Parameters: input
* IPCPO   POINTER TO THE CPO STRUCTURE             I
* NGCCPO  NUMBER OF FINAL CONDENSED GROUPS         I
* NVXSR   NUMBER OF VECTORIAL XS                   I
* NMXSR   NUMBER OF MATRIX XS                      I
* IBURN   BURNUP STEP                              I
* EFJ     ENERGY PER FISSION IN JOULES             R
* NAMDXS  VECTOR CROSS SECTION NAMES               C(NVXSR+
*                                                    NMXSR)*12
* ITYXS   TYPE OF XS SAVED                         R
* FLXINT  VOLUME INTEGRATED FLUX                   R(NGCCPO)
* FLXDIS  FLUX DISADVANTAGE FACTOR                 R(NGCCPO)
* OVERV   1/V CROSS SECTION                        R(NGCCPO)
* RECXSV  VECTOR CROSS SECTIONS RECORDS            R(NGCCPO,
*                                               NVXSR+NMXSR)
* IDRXSM  COMPRESSION VECTOR FOR MATRIX            R(NGCCPO,2)
* RECXSM  MATRIX CROSS SECTIONS RECORDS            R(NGCCPO,
*                                              NGCCPO,NMXSR)
*
*Parameters: work
* RECSCA  SCATT CROSS SECTIONS RECORDS             R(NGCCPO*
*                                                          NGCCPO)
*  3- ROUTINES CALLED
*    UTILITIES ROUTINES
*      LCMPUT : DATA STRUCTURE WRITE ROUTINE
*      LCMSIX : DATA STRUCTURE CHANGE DIRECTORY ROUTINE
*
*----
*
      USE              GANLIB
      IMPLICIT         NONE
      TYPE(C_PTR)      IPCPO
      INTEGER          NGCCPO,NVXSR,NMXSR,IBURN
      CHARACTER        NAMDXS(NVXSR+NMXSR)*12
      INTEGER          IDRXSM(NGCCPO,2),ITYXS(NVXSR+NMXSR)
      REAL             EFJ,FLXINT(NGCCPO),
     >                 FLXDIS(NGCCPO),OVERV(NGCCPO),
     >                 RECXSV(NGCCPO,NVXSR+NMXSR),
     >                 RECXSM(NGCCPO,NGCCPO,NMXSR),
     >                 RECSCA(NGCCPO*NGCCPO)
C----
C  LOCAL VARIABLES
C----
      INTEGER          IOUT,ILCMUP,ILCMDN
      CHARACTER        NAMSBR*6
      PARAMETER       (IOUT=6,ILCMUP=1,ILCMDN=2,NAMSBR='T16WDS')
      CHARACTER        NAMBRN*12,NAMMAC*12,NAMLEG*2
      INTEGER          IVXS,IMXS,IGTO,IGFROM,IGMIN,IGMAX,NXSCMP
      REAL             DENMAC
C----
C  SET UP BURUP DIRECTORY
C----
      WRITE(NAMBRN,'(A8,I4)') 'BURN    ',IBURN
      CALL LCMSIX(IPCPO ,NAMBRN,ILCMUP)
C----
C  SAVE ISOTOPES DENSITY, ENERGY, INTEGRATED FLUX,
C  DISADVANTAGE FACTOR AND OVERV ON MAIN DIRECTORY
C----
      DENMAC=1.0
      CALL LCMPUT(IPCPO ,'ISOTOPESDENS',     1,2,DENMAC)
      CALL LCMPUT(IPCPO ,'ISOTOPES-EFJ',     1,2,EFJ)
      CALL LCMPUT(IPCPO ,'FLUX-INTG   ',NGCCPO,2,FLXINT)
      CALL LCMPUT(IPCPO ,'FLUXDISAFACT',NGCCPO,2,FLXDIS)
      CALL LCMPUT(IPCPO ,'OVERV       ',NGCCPO,2,OVERV)
      NAMMAC='MACR        '
      CALL LCMSIX(IPCPO ,NAMMAC,ILCMUP)
C----
C  FIND IF VECTOR XS NOT ALL 0.0
C  AND INITIALIZE ITYXS ACCORDINGLY
C  SAVE XS
C----
      DO 100 IVXS=1,NVXSR
        ITYXS(IVXS)=0
        DO 101 IGFROM=1,NGCCPO
          IF(RECXSV(IGFROM,IVXS) .NE. 0.0) THEN
            ITYXS(IVXS)=1
            CALL LCMPUT(IPCPO ,NAMDXS(IVXS),
     >                  NGCCPO,2,RECXSV(1,IVXS))
          ENDIF
 101    CONTINUE
 100  CONTINUE
C----
C  FIND IF SCATTERING XS NOT ALL 0.0
C  AND INITIALIZE ITYXS ACCORDINGLY
C----
      DO 110 IMXS=1,NMXSR
        ITYXS(IMXS+NVXSR)=0
        DO 111 IGTO=1,NGCCPO
          DO 112 IGFROM=1,NGCCPO
            IF(RECXSM(IGTO,IGFROM,IMXS) .NE. 0.0) THEN
              ITYXS(IMXS+NVXSR)=1
              CALL LCMPUT(IPCPO ,NAMDXS(IMXS+NVXSR),
     >                    NGCCPO,2,RECXSV(1,IMXS+NVXSR))
              GO TO 115
            ENDIF
 112      CONTINUE
 111    CONTINUE
 115    CONTINUE
 110  CONTINUE
C----
C  SAVE ITYXS
C----
      CALL LCMPUT(IPCPO ,'XS-SAVED    ',NVXSR+NMXSR,1,ITYXS)
C----
C  COMPRESS SCATTERING MATRIX
C  RECXSM(IGTO,IGFROM,IMXS) REPRESENT SCATTERING CROSS SECTION
C    FROM GROUP "IGFROM" TO GROUP "IGTO"
C  IDRXSM(IGTO,1) IS MAXIMUM GROUP NUMBER
C    WITH SCATTERING TO "IGTO" GROUP
C  IDRXSM(IGTO,2) IS NUMBER OF GROUPS
C    WITH SCATTERING TO "IGTO" GROUP
C  RECSCA(IX) IS COMPRESSED SCATTERING MATRIX
C  IX CAN BE LOCALIZED IN RECXSM(IGTO,IGFROM) USING
C  IF(IGTO=1) THEN
C    IPOSD=1
C  ELSE
C    IPOSD=1+SUM( IDRXSM(IGF,2) , IGF=1,IGTO-1)
C  ENDIF
C  IF(IGFROM.GT.IDRXSM(IGTO,1)) THEN
C    XSSCMP NOT STORED
C  ELSE IF(IGFROM.LT.IDRXSM(IGTO,1)-IDRXSM(IGTO,2)+1) THEN
C    XSSCMP NOT STORED
C  ELSE
C    IX=IPOSD+IDRXSM(IGTO,1)-IGFROM
C    RECSCA(IX)=RECXSM(IGTO,IGFROM)
C  ENDIF
C----
      DO 120 IMXS=1,NMXSR
        NXSCMP=0
        DO 121 IGTO=1,NGCCPO
          IGMIN=IGTO
          IGMAX=IGTO
          DO 122 IGFROM=1,NGCCPO
            IF(RECXSM(IGTO,IGFROM,IMXS) .NE. 0.0) THEN
              IGMIN=MIN(IGMIN,IGFROM)
              IGMAX=MAX(IGMAX,IGFROM)
            ENDIF
 122      CONTINUE
          IDRXSM(IGTO,1)=IGMAX
          IDRXSM(IGTO,2)=IGMAX-IGMIN+1
          DO 123 IGFROM=IGMAX,IGMIN,-1
            NXSCMP=NXSCMP+1
            RECSCA(NXSCMP)=RECXSM(IGTO,IGFROM,IMXS)
 123      CONTINUE
 121    CONTINUE
        WRITE(NAMLEG,'(I2)') IMXS-1
        CALL LCMPUT(IPCPO,'NJJ '//NAMLEG//'      ',NGCCPO,1,IDRXSM(1,1))
        CALL LCMPUT(IPCPO,'IJJ '//NAMLEG//'      ',NGCCPO,1,IDRXSM(1,2))
        CALL LCMPUT(IPCPO,'SCAT'//NAMLEG//'      ',NXSCMP,2,RECSCA)
 120  CONTINUE
      CALL LCMSIX(IPCPO ,NAMMAC,ILCMDN)
      CALL LCMSIX(IPCPO ,NAMBRN,ILCMDN)
      RETURN
      END
